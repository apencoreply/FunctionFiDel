
stages:
- stage: JMeterTest
  displayName: JMeter Test stage
  dependsOn: Deploy
  condition: succeeded()

  jobs:
  - job: Test
    displayName: Test
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: PowerShell@2
      displayName: 'Install Apache JMeter'
      inputs:
        targetType: 'inline'
        script: |
          $jmeterZipUrl = 'https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.zip'
          $jmeterZipPath = '$(System.DefaultWorkingDirectory)/jmeter.zip'
          $jmeterExtractPath = '$(System.DefaultWorkingDirectory)/jmeter'

          Invoke-WebRequest -Uri $jmeterZipUrl -OutFile $jmeterZipPath
          Expand-Archive -Path $jmeterZipPath -DestinationPath $jmeterExtractPath -Force
    
    - task: PowerShell@2
      displayName: 'Set parameters runtime'
      inputs:
        targetType: 'inline'
        script: |
          $filePath = "$(System.DefaultWorkingDirectory)/FiDelTest.jmx"
          $content = Get-Content -Path $filePath -Raw

          $newContent = $content -replace "<stringProp name=`"ThreadGroup.num_threads`">10</stringProp>", "<stringProp name=`"ThreadGroup.num_threads`">30</stringProp>"

          $newContent | Set-Content -Path $filePath

        # $newContent = $newContent -replace "<stringProp name=`"ThreadGroup.ramp_time`">1</stringProp>", "<stringProp name=`"ThreadGroup.ramp_time`">1</stringProp>"
        # $newContent = $newContent -replace "<stringProp name=`"LoopController.loops`">10</stringProp>", "<stringProp name=`"LoopController.loops`">1</stringProp>"
    
    - script: |
        cat $(System.DefaultWorkingDirectory)/*.jmx
      displayName: 'Explore results'
    
    - script: |
        $(System.DefaultWorkingDirectory)/jmeter/apache-jmeter-5.6/bin/jmeter -n -t $(System.DefaultWorkingDirectory)/*.jmx -l $(System.DefaultWorkingDirectory)/test_summary.jtl
      displayName: 'Run JMeter Test'

    - script: |
        cat $(System.DefaultWorkingDirectory)/test_summary.jtl
      displayName: 'Explore results'

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(System.DefaultWorkingDirectory)/test_summary.jtl'
        artifact: 'JTLResults'
